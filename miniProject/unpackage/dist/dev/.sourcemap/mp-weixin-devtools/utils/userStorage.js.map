{"version":3,"names":["SECRET_KEY","USER_INFO_KEY","getRandomWord","randomWords","randomIndex","Math","floor","random","length","generateSalt","saltLength","salt","i","encryptData","data","iv","common_vendor","CryptoJS","lib","WordArray","encrypted","AES","encrypt","JSON","stringify","padding","pad","Pkcs7","mode","CBC","toString","enc","Base64","decryptData","encryptedData","parts","split","parse","decrypted","decrypt","originalText","Utf8","setUserInfo","userInfo","index","setStorageSync","getUserInfo","getStorageSync"],"sources":["userStorage.js"],"sourcesContent":["// import CryptoJS from \"crypto-js\";\r\nimport CryptoJS from \"crypto-js\"\r\n\n// 加密密钥，实际项目中应妥善保管\nconst SECRET_KEY = 'campus';\n\n// 存储用户信息的键名\nconst USER_INFO_KEY = 'userInfo';\n\n/**\n * 生成随机数\n * @returns 随机数\n */\nfunction getRandomWord() {\n    const randomWords = [\n        'apple', 'banana', 'cherry', 'date', 'elderberry',\n        'fig', 'grape', 'honeydew', 'kiwi', 'lemon',\n        'mango', 'nectarine', 'orange', 'papaya', 'quince',\n        'raspberry', 'strawberry', 'tangerine', 'ugli', 'vanilla'\n    ];\n    const randomIndex = Math.floor(Math.random() * randomWords.length);\n    return randomWords[randomIndex];\n}\n\n/**\n * 生成随机盐\n * @returns 随机盐\n */\nfunction generateSalt() {\n    const saltLength = 16;\n    let salt = '';\n    for (let i = 0; i < saltLength; i++) {\n        salt += getRandomWord();\n    }\n    return salt;\n}\n\n/**\n * 加密数据\n * @param data 需要加密的数据\n * @returns 加密后的字符串\n */\nfunction encryptData(data) {\n    const salt = generateSalt();\n    const iv = CryptoJS.lib.WordArray.random(16);\n    const encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), SECRET_KEY + salt, {\n        iv: iv,\n        padding: CryptoJS.pad.Pkcs7,\n        mode: CryptoJS.mode.CBC\n    });\n    return salt + ':' + iv.toString(CryptoJS.enc.Base64) + ':' + encrypted.toString();\n}\n\n/**\n * 解密数据\n * @param encryptedData 加密后的字符串\n * @returns 解密后的数据\n */\nfunction decryptData(encryptedData) {\n    const parts = encryptedData.split(':');\n    const salt = parts[0];\n    const iv = CryptoJS.enc.Base64.parse(parts[1]);\n    const encrypted = parts[2];\n    const decrypted = CryptoJS.AES.decrypt(encrypted, SECRET_KEY + salt, {\n        iv: iv,\n        padding: CryptoJS.pad.Pkcs7,\n        mode: CryptoJS.mode.CBC\n    });\n    const originalText = decrypted.toString(CryptoJS.enc.Utf8);\n    return JSON.parse(originalText);\n}\n\n/**\n * 存储用户信息\n * @param userInfo 用户信息对象\n */\nexport function setUserInfo(userInfo) {\n    const encryptedData = encryptData(userInfo);\n    uni.setStorageSync(USER_INFO_KEY, encryptedData);\n}\n\n/**\n * 获取用户信息\n * @returns 用户信息对象\n */\nexport function getUserInfo() {\n    const encryptedData = uni.getStorageSync(USER_INFO_KEY);\n    if (encryptedData) {\n        return decryptData(encryptedData);\n    }\n    return null;\n}\n\n/**\n * 清除用户信息\n */\nexport function clearUserInfo() {\n    uni.removeStorageSync(USER_INFO_KEY);\n}"],"mappings":";;;;AAIA,IAAMA,UAAA,GAAa;AAGnB,IAAMC,aAAA,GAAgB;AAMtB,SAASC,cAAA,EAAgB;EACrB,IAAMC,WAAA,GAAc,CAChB,SAAS,UAAU,UAAU,QAAQ,cACrC,OAAO,SAAS,YAAY,QAAQ,SACpC,SAAS,aAAa,UAAU,UAAU,UAC1C,aAAa,cAAc,aAAa,QAAQ,UACxD;EACI,IAAMC,WAAA,GAAcC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,MAAA,KAAWJ,WAAA,CAAYK,MAAM;EACjE,OAAOL,WAAA,CAAYC,WAAW;AAClC;AAMA,SAASK,aAAA,EAAe;EACpB,IAAMC,UAAA,GAAa;EACnB,IAAIC,IAAA,GAAO;EACX,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIF,UAAA,EAAYE,CAAA,IAAK;IACjCD,IAAA,IAAQT,aAAA,EAAa;EACxB;EACD,OAAOS,IAAA;AACX;AAOA,SAASE,YAAYC,IAAA,EAAM;EACvB,IAAMH,IAAA,GAAOF,YAAA;EACb,IAAMM,EAAA,GAAKC,aAAA,CAAAC,QAAA,CAASC,GAAA,CAAIC,SAAA,CAAUZ,MAAA,CAAO,EAAE;EAC3C,IAAMa,SAAA,GAAYJ,aAAA,CAAAC,QAAA,CAASI,GAAA,CAAIC,OAAA,CAAQC,IAAA,CAAKC,SAAA,CAAUV,IAAI,GAAGd,UAAA,GAAaW,IAAA,EAAM;IAC5EI,EAAA,EAAAA,EAAA;IACAU,OAAA,EAAST,aAAA,CAAAC,QAAA,CAASS,GAAA,CAAIC,KAAA;IACtBC,IAAA,EAAMZ,aAAA,CAAAC,QAAA,CAASW,IAAA,CAAKC;EAC5B,CAAK;EACD,OAAOlB,IAAA,GAAO,MAAMI,EAAA,CAAGe,QAAA,CAASd,aAAA,CAAQC,QAAA,CAACc,GAAA,CAAIC,MAAM,IAAI,MAAMZ,SAAA,CAAUU,QAAA,EAAQ;AACnF;AAOA,SAASG,YAAYC,aAAA,EAAe;EAChC,IAAMC,KAAA,GAAQD,aAAA,CAAcE,KAAA,CAAM,GAAG;EACrC,IAAMzB,IAAA,GAAOwB,KAAA,CAAM,CAAC;EACpB,IAAMpB,EAAA,GAAKC,aAAA,CAAQC,QAAA,CAACc,GAAA,CAAIC,MAAA,CAAOK,KAAA,CAAMF,KAAA,CAAM,CAAC,CAAC;EAC7C,IAAMf,SAAA,GAAYe,KAAA,CAAM,CAAC;EACzB,IAAMG,SAAA,GAAYtB,aAAA,CAAAC,QAAA,CAASI,GAAA,CAAIkB,OAAA,CAAQnB,SAAA,EAAWpB,UAAA,GAAaW,IAAA,EAAM;IACjEI,EAAA,EAAAA,EAAA;IACAU,OAAA,EAAST,aAAA,CAAAC,QAAA,CAASS,GAAA,CAAIC,KAAA;IACtBC,IAAA,EAAMZ,aAAA,CAAAC,QAAA,CAASW,IAAA,CAAKC;EAC5B,CAAK;EACD,IAAMW,YAAA,GAAeF,SAAA,CAAUR,QAAA,CAASd,aAAA,CAAAC,QAAA,CAASc,GAAA,CAAIU,IAAI;EACzD,OAAOlB,IAAA,CAAKc,KAAA,CAAMG,YAAY;AAClC;AAMO,SAASE,YAAYC,QAAA,EAAU;EAClC,IAAMT,aAAA,GAAgBrB,WAAA,CAAY8B,QAAQ;EAC1C3B,aAAA,CAAA4B,KAAA,CAAIC,cAAA,CAAe5C,aAAA,EAAeiC,aAAa;AACnD;AAMO,SAASY,YAAA,EAAc;EAC1B,IAAMZ,aAAA,GAAgBlB,aAAA,CAAA4B,KAAA,CAAIG,cAAA,CAAe9C,aAAa;EACtD,IAAIiC,aAAA,EAAe;IACf,OAAOD,WAAA,CAAYC,aAAa;EACnC;EACD,OAAO;AACX","ignoreList":[]}