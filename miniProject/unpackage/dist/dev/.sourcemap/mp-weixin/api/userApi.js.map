{"version":3,"file":"userApi.js","sources":["api/userApi.ts"],"sourcesContent":["// types.ts\r\nexport interface RequestParams {\r\n    url: string;\r\n    method: string;\r\n    data?: any;\r\n    header?: any;\r\n}\r\n\r\nexport interface ResponseData {\r\n    statusCode: number;\r\n    data: any;\r\n}\r\n\r\n// userAPI.ts\r\nimport request from '@/utils/request'; // 引入封装的请求方法\r\n\r\n// 响应类型定义\r\ninterface BaseResponse<T> {\r\n    code: number;\r\n    data: T;\r\n    message: string;\r\n}\r\n\r\n// 请求类型定义\r\ninterface UserAddRequest {\r\n    userAccount?: string;\r\n    userAvatar?: string;\r\n    userName?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n}\r\n\r\ninterface DeleteRequest {\r\n    id?: number;\r\n}\r\n\r\ninterface User {\r\n    createTime?: string;\r\n    editTime?: string;\r\n    id?: number;\r\n    isDelete?: number;\r\n    openid?: string;\r\n    updateTime?: string;\r\n    userAccount?: string;\r\n    userName?: string;\r\n    userPassword?: string;\r\n    userPhone?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n    userScore?: number;\r\n}\r\n\r\ninterface LoginUserVo {\r\n    createTime?: string;\r\n    editTime?: string;\r\n    id?: number;\r\n    updateTime?: string;\r\n    userAccount?: string;\r\n    userAvatar?: string;\r\n    userName?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n}\r\n\r\ninterface UserVO {\r\n    createTime?: string;\r\n    id?: number;\r\n    userAccount?: string;\r\n    userAvatar?: string;\r\n    userName?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n}\r\n\r\ninterface Page<T> {\r\n    current: number;\r\n    pages: number;\r\n    records: T[];\r\n    size: number;\r\n    total: number;\r\n}\r\n\r\ninterface UserQueryRequest {\r\n    current?: number;\r\n    id?: number;\r\n    pageSize?: number;\r\n    sortField?: string;\r\n    sortOrder?: string;\r\n    userAccount?: string;\r\n    userName?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n}\r\n\r\ninterface UserLoginRequest {\r\n    userAccount?: string;\r\n    userPassword?: string;\r\n}\r\n\r\ninterface UserRegisterRequest {\r\n    checkPassword?: string;\r\n    userAccount?: string;\r\n    userPassword?: string;\r\n}\r\n\r\ninterface UserUpdateRequest {\r\n    id?: number;\r\n    userAvatar?: string;\r\n    userName?: string;\r\n    userProfile?: string;\r\n    userRole?: string;\r\n}\r\n\r\n// 请求方法\r\nexport function getUserInfo(): Promise<BaseResponse<LoginUserVo>> {\r\n    return request<BaseResponse<LoginUserVo>>({\r\n        url: '/api/user/get/login',\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nexport function getUserById(id: number): Promise<BaseResponse<User>> {\r\n    return request<BaseResponse<User>>({\r\n        url: `/api/user/get?id=${id}`,\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nexport function getUserVOById(id: number): Promise<BaseResponse<UserVO>> {\r\n    return request<BaseResponse<UserVO>>({\r\n        url: `/api/user/get/vo?id=${id}`,\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nexport function listUserVOByPage(data: UserQueryRequest): Promise<BaseResponse<Page<UserVO>>> {\r\n    return request<BaseResponse<Page<UserVO>>>({\r\n        url: '/api/user/list/page/vo',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function addUser(data: UserAddRequest): Promise<BaseResponse<number>> {\r\n    return request<BaseResponse<number>>({\r\n        url: '/api/user/add',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function updateUser(data: UserUpdateRequest): Promise<BaseResponse<boolean>> {\r\n    return request<BaseResponse<boolean>>({\r\n        url: '/api/user/update',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function deleteUser(data: DeleteRequest): Promise<BaseResponse<boolean>> {\r\n    return request<BaseResponse<boolean>>({\r\n        url: '/api/user/delete',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function userLogin(data: UserLoginRequest): Promise<BaseResponse<LoginUserVo>> {\r\n    return request<BaseResponse<LoginUserVo>>({\r\n        url: '/api/user/login',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function userLogout(): Promise<BaseResponse<boolean>> {\r\n    return request<BaseResponse<boolean>>({\r\n        url: '/api/user/logout',\r\n        method: 'GET',\r\n    });\r\n}\r\n\r\nexport function userRegister(data: UserRegisterRequest): Promise<BaseResponse<number>> {\r\n    return request<BaseResponse<number>>({\r\n        url: '/api/user/register',\r\n        method: 'POST',\r\n        data: data,\r\n    });\r\n}\r\n\r\nexport function healthCheck(): Promise<BaseResponse<string>> {\r\n    return request<BaseResponse<string>>({\r\n        url: '/api/health',\r\n        method: 'GET',\r\n    });\r\n}"],"names":["request"],"mappings":";;AAuKO,SAAS,UAAU,MAA4D;AAClF,SAAOA,sBAAmC;AAAA,IACtC,KAAK;AAAA,IACL,QAAQ;AAAA,IACR;AAAA,EAAA,CACH;AACL;;"}