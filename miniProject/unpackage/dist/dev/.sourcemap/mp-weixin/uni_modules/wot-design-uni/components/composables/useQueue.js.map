{"version":3,"file":"useQueue.js","sources":["uni_modules/wot-design-uni/components/composables/useQueue.ts"],"sourcesContent":["import { type Ref, provide, ref } from 'vue'\n\nexport const queueKey = '__QUEUE_KEY__'\n\nexport interface Queue {\n  queue: Ref<any[]>\n  pushToQueue: (comp: any) => void\n  removeFromQueue: (comp: any) => void\n  closeOther: (comp: any) => void\n  closeOutside: () => void\n}\n\nexport function useQueue() {\n  const queue = ref<any[]>([])\n\n  function pushToQueue(comp: any) {\n    queue.value.push(comp)\n  }\n\n  function removeFromQueue(comp: any) {\n    queue.value = queue.value.filter((item) => {\n      return item.$.uid !== comp.$.uid\n    })\n  }\n\n  function closeOther(comp: any) {\n    queue.value.forEach((item) => {\n      if (item.$.uid !== comp.$.uid) {\n        item.$.exposed.close()\n      }\n    })\n  }\n\n  function closeOutside() {\n    queue.value.forEach((item) => {\n      item.$.exposed.close()\n    })\n  }\n\n  provide(queueKey, {\n    queue,\n    pushToQueue,\n    removeFromQueue,\n    closeOther,\n    closeOutside\n  })\n\n  return {\n    closeOther,\n    closeOutside\n  }\n}\n"],"names":[],"mappings":";;AAEO,MAAM,WAAW;;"}