{"version":3,"file":"types.js","sources":["uni_modules/wot-design-uni/components/wd-upload/types.ts"],"sourcesContent":["import type { ComponentPublicInstance, ExtractPropTypes, PropType } from 'vue'\nimport { baseProps, makeArrayProp, makeBooleanProp, makeNumberProp, makeStringProp } from '../common/props'\nimport type { LoadingType } from '../wd-loading/types'\nimport type { ImageMode } from '../wd-img/types'\n\nexport interface ChooseFileOption {\n  // 是否支持多选文件\n  multiple: boolean\n  // 所选的图片的尺寸\n  sizeType?: UploadSizeType[]\n  // 选择文件的来源\n  sourceType: UploadSourceType[]\n  // 最大允许上传个数\n  maxCount: number\n  // 接受文件类型\n  accept: UploadFileType\n  /**\n   * 是否压缩视频，当 accept 为 video 时生效。\n   */\n  compressed: boolean\n  /**\n   * 拍摄视频最长拍摄时间，当 accept 为 video | media 时生效，单位秒。\n   */\n  maxDuration: number\n  /**\n   * 使用前置或者后置相机，当 accept 为 video | media 时生效，可选值为：back｜front。\n   */\n  camera: UploadCameraType\n}\n\nexport type UploadFileItem = {\n  [key: string]: any\n  // \t当前上传文件在列表中的唯一标识\n  uid: number\n  // 缩略图地址\n  thumb?: string\n  // 当前文件名称，仅h5支持\n  name?: string\n  // 上传状态。若自定义了status-key，应取对应字段\n  status?: UploadStatusType\n  // 文件大小\n  size?: number\n  // 上传图片/视频的本地地址\n  url: string\n  // 上传进度\n  percent?: number\n  // 后端返回的内容，可能是对象，也可能是字符串\n  response?: string | Record<string, any>\n}\n\nexport interface ChooseFile {\n  path: string // 上传临时地址\n  size?: number // 上传大小\n  name?: string // 当前文件名称，仅h5支持\n  type: 'image' | 'video' | 'file' // 上传类型\n  duration?: number // 上传时间\n  thumb?: string // 缩略图地址\n}\n\nexport type UploadSourceType = 'album' | 'camera'\nexport type UploadSizeType = 'original' | 'compressed'\nexport type UploadFileType = 'image' | 'video' | 'media' | 'all' | 'file'\nexport type UploadCameraType = 'front' | 'back'\nexport type UploadStatusType = 'pending' | 'loading' | 'success' | 'fail'\n\nexport type UploadBeforePreviewOption = {\n  file: UploadFileItem\n  index: number\n  imgList: string[]\n  fileList: UploadFileItem[]\n  resolve: (isPass: boolean) => void\n}\nexport type UploadBeforePreview = (option: UploadBeforePreviewOption) => void\n\nexport type UploadOnPreviewFailOption = {\n  index: number\n  imgList: string[]\n}\nexport type UploadOnPreviewFail = (option: UploadOnPreviewFailOption) => void\n\nexport type UploadBeforeRemoveOption = {\n  file: UploadFileItem\n  index: number\n  fileList: UploadFileItem[]\n  resolve: (isPass: boolean) => void\n}\nexport type UploadBeforeRemove = (option: UploadBeforeRemoveOption) => void\n\nexport type UploadBeforeChooseOption = {\n  fileList: UploadFileItem[]\n  resolve: (isPass: boolean) => void\n}\nexport type UploadBeforeChoose = (option: UploadBeforeChooseOption) => void\n\nexport type UploadBeforeUploadOption = {\n  files: Record<string, any>[]\n  fileList: UploadFileItem[]\n  resolve: (isPass: boolean) => void\n}\nexport type UploadBeforeUpload = (options: UploadBeforeUploadOption) => void\n\nexport type UploadFormData = Record<string, any>\n\nexport type UploadBuildFormDataOption = {\n  file: UploadFileItem\n  formData: UploadFormData\n  resolve: (formData: Record<string, any>) => void\n}\nexport type UploadBuildFormData = (options: UploadBuildFormDataOption) => void\n\nexport type UploadFile = Partial<UploadFileItem> & { url: string }\n\nexport type UploadMethod = (\n  uploadFile: UploadFileItem,\n  formData: UploadFormData,\n  options: {\n    action: string\n    header: Record<string, any>\n    name: string\n    fileName: string\n    fileType: 'image' | 'video' | 'audio'\n    statusCode: number\n    onSuccess: (res: UniApp.UploadFileSuccessCallbackResult, file: UploadFileItem, formData: UploadFormData) => void\n    onError: (res: UniApp.GeneralCallbackResult, file: UploadFileItem, formData: UploadFormData) => void\n    onProgress: (res: UniApp.OnProgressUpdateResult, file: UploadFileItem) => void\n  }\n) => void | Promise<void>\n\nexport const uploadProps = {\n  ...baseProps,\n  /**\n   * 上传的文件列表,例如:[{name:'food.jpg',url:'https://xxx.cdn.com/xxx.jpg'}]\n   * 类型：array\n   * 默认值：[]\n   */\n  fileList: makeArrayProp<UploadFile>(),\n  /**\n   * 必选参数，上传的地址\n   * 类型：string\n   * 默认值：''\n   */\n  action: makeStringProp(''),\n  /**\n   * 设置上传的请求头部\n   * 类型：object\n   * 默认值：{}\n   */\n  header: { type: Object as PropType<Record<string, any>>, default: () => ({}) },\n  /**\n   * 是否支持多选文件\n   * 类型：boolean\n   * 默认值：false\n   */\n  multiple: makeBooleanProp(false),\n  /**\n   * 是否禁用\n   * 类型：boolean\n   * 默认值：false\n   */\n  disabled: makeBooleanProp(false),\n  /**\n   * 最大允许上传个数\n   * 类型：number\n   * 默认值：无\n   */\n  limit: Number,\n  /**\n   * 限制上传个数的情况下，是否展示当前上传的个数\n   * 类型：boolean\n   * 默认值：true\n   */\n  showLimitNum: makeBooleanProp(true),\n  /**\n   * 文件大小限制，单位为byte\n   * 类型：number\n   * 默认值：Number.MAX_VALUE\n   */\n  maxSize: makeNumberProp(Number.MAX_VALUE),\n  /**\n   * 选择图片的来源，chooseImage接口详细参数，查看官方手册\n   * 类型：array\n   * 默认值：['album','camera']\n   */\n  sourceType: {\n    type: Array as PropType<UploadSourceType[]>,\n    default: () => ['album', 'camera']\n  },\n  /**\n   * 所选的图片的尺寸，chooseImage接口详细参数，查看官方手册\n   * 类型：array\n   * 默认值：['original','compressed']\n   */\n  sizeType: {\n    type: Array as PropType<UploadSizeType[]>,\n    // #ifndef MP-DINGTALK\n    default: () => ['original', 'compressed']\n    // #endif\n  },\n  /**\n   * 文件对应的key，开发者在服务端可以通过这个key获取文件的二进制内容，uploadFile接口详细参数，查看官方手册\n   * 类型：string\n   * 默认值：'file'\n   */\n  name: makeStringProp('file'),\n  /**\n   * HTTP请求中其他额外的formdata，uploadFile接口详细参数，查看官方手册\n   * 类型：object\n   * 默认值：{}\n   */\n  formData: { type: Object as PropType<UploadFormData>, default: () => {} },\n  /**\n   * 预览失败执行操作\n   * 类型：function({index,imgList})\n   * 默认值：-\n   */\n  onPreviewFail: Function as PropType<UploadOnPreviewFail>,\n  /**\n   * 上传文件之前的钩子，参数为上传的文件和文件列表，若返回false或者返回Promise且被reject，则停止上传。\n   * 类型：function({files,fileList,resolve})\n   * 默认值：-\n   */\n  beforeUpload: Function as PropType<UploadBeforeUpload>,\n  /**\n   * 选择图片之前的钩子，参数为文件列表，若返回false或者返回Promise且被reject，则停止上传。\n   * 类型：function({fileList,resolve})\n   * 默认值：-\n   */\n  beforeChoose: Function as PropType<UploadBeforeChoose>,\n  /**\n   * 删除文件之前的钩子，参数为要删除的文件和文件列表，若返回false或者返回Promise且被reject，则停止上传。\n   * 类型：function({file,fileList,resolve})\n   * 默认值：-\n   */\n  beforeRemove: Function as PropType<UploadBeforeRemove>,\n  /**\n   * 图片预览前的钩子，参数为预览的图片下标和图片列表，若返回false或者返回Promise且被reject，则停止上传。\n   * 类型：function({index,imgList,resolve})\n   * 默认值：-\n   */\n  beforePreview: Function as PropType<UploadBeforePreview>,\n  /**\n   * 构建上传formData的钩子，参数为上传的文件、待处理的formData，返回值为处理后的formData，若返回false或者返回Promise且被reject，则停止上传。\n   * 类型：function({file,formData,resolve})\n   * 默认值：-\n   * 最低版本：0.1.61\n   */\n  buildFormData: Function as PropType<UploadBuildFormData>,\n  /**\n   * 加载中图标类型\n   * 类型：string\n   * 默认值：'ring'\n   */\n  loadingType: makeStringProp<LoadingType>('ring'),\n  /**\n   * 加载中图标颜色\n   * 类型：string\n   * 默认值：'#ffffff'\n   */\n  loadingColor: makeStringProp('#ffffff'),\n  /**\n   * 文件类型，可选值：'image' | 'video' | 'media' | 'all' | 'file'\n   * 默认值：image\n   * 描述：'media'表示同时支持'image'和'video'，'file'表示支持除'image'和'video'外的所有文件类型，'all'标识支持全部类型文件\n   * 'media'和'file'仅微信支持，'all'仅微信和H5支持\n   */\n  accept: makeStringProp<UploadFileType>('image'),\n  /**\n   * file 数据结构中，status 对应的 key\n   * 类型：string\n   * 默认值：'status'\n   */\n  statusKey: makeStringProp('status'),\n  /**\n   * 加载中图标尺寸\n   * 类型：string\n   * 默认值：'24px'\n   */\n  loadingSize: makeStringProp('24px'),\n  /**\n   * 是否压缩视频，当 accept 为 video 时生效。\n   * 类型：boolean\n   * 默认值：true\n   */\n  compressed: makeBooleanProp(true),\n  /**\n   * 拍摄视频最长拍摄时间，当 accept 为 video | media 时生效，单位秒。\n   * 类型：number\n   * 默认值：60\n   */\n  maxDuration: makeNumberProp(60),\n  /**\n   * 使用前置或者后置相机，当 accept 为 video | media 时生效，可选值为：back｜front。\n   * 类型：UploadCameraType\n   * 默认值：'back'\n   */\n  camera: makeStringProp<UploadCameraType>('back'),\n  /**\n   * 预览图片的mode属性\n   */\n  imageMode: makeStringProp<ImageMode>('aspectFit'),\n  /**\n   * 接口响应的成功状态（statusCode）值\n   */\n  successStatus: makeNumberProp(200),\n  /**\n   * 自定义上传按钮样式\n   * 类型：string\n   */\n  customEvokeClass: makeStringProp(''),\n  /**\n   * 自定义预览图片列表样式\n   * 类型：string\n   */\n  customPreviewClass: makeStringProp(''),\n  /**\n   * 是否选择文件后自动上传\n   * 类型：boolean\n   */\n  autoUpload: makeBooleanProp(true),\n  /**\n   * 点击已上传时是否可以重新上传\n   * 类型：boolean\n   * 默认值：false\n   */\n  reupload: makeBooleanProp(false),\n  /**\n   * 自定义上传文件的请求方法\n   * 类型：UploadMethod\n   * 默认值：-\n   */\n  uploadMethod: Function as PropType<UploadMethod>\n}\n\nexport type UploadProps = ExtractPropTypes<typeof uploadProps>\n\nexport type UploadExpose = {\n  /**\n   * 手动触发上传\n   */\n  submit: () => void\n}\n\nexport type UploadErrorEvent = {\n  error: any\n  file: UploadFileItem\n  formData: UploadFormData\n}\n\nexport type UploadChangeEvent = {\n  fileList: UploadFileItem[]\n}\n\nexport type UploadSuccessEvent = {\n  file: UploadFileItem\n  fileList: UploadFileItem[]\n  formData: UploadFormData\n}\n\nexport type UploadProgressEvent = {\n  response: UniApp.OnProgressUpdateResult\n  file: UploadFileItem\n}\n\nexport type UploadOversizeEvent = {\n  file: ChooseFile\n}\n\nexport type UploadRemoveEvent = {\n  file: UploadFileItem\n}\n\nexport type UploadInstance = ComponentPublicInstance<UploadProps, UploadExpose>\n"],"names":["baseProps","makeArrayProp","makeStringProp","makeBooleanProp","makeNumberProp"],"mappings":";;AAgIO,MAAM,cAAc;AAAA,EACzB,GAAGA,iDAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMH,UAAUC,iDAAAA,cAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpC,QAAQC,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzB,QAAQ,EAAE,MAAM,QAAyC,SAAS,OAAO,CAAI,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM7E,UAAUC,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/B,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMP,cAAcA,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,SAASC,iDAAAA,eAAe,OAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxC,YAAY;AAAA,IACV,MAAM;AAAA,IACN,SAAS,MAAM,CAAC,SAAS,QAAQ;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AAAA,IACR,MAAM;AAAA,IAEN,SAAS,MAAM,CAAC,YAAY,YAAY;AAAA,EAE1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAMF,gEAAe,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM3B,UAAU,EAAE,MAAM,QAAoC,SAAS,MAAM;AAAA,EAAA,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMxE,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMf,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMd,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMd,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMd,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOf,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMf,aAAaA,gEAA4B,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/C,cAAcA,gEAAe,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtC,QAAQA,gEAA+B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9C,WAAWA,gEAAe,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,aAAaA,gEAAe,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,YAAYC,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,aAAaC,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9B,QAAQF,gEAAiC,MAAM;AAAA;AAAA;AAAA;AAAA,EAI/C,WAAWA,gEAA0B,WAAW;AAAA;AAAA;AAAA;AAAA,EAIhD,eAAeE,gEAAe,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjC,kBAAkBF,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnC,oBAAoBA,gEAAe,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrC,YAAYC,iEAAgB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhC,UAAUA,iEAAgB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM/B,cAAc;AAChB;;"}