{"version":3,"file":"wd-upload.js","sources":["uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue","D:/HBuilderX/HBuilderX.3.1.22.20210709.full/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RzovQ29kZS9jYW1wdXMvbWluaVByb2plY3QvdW5pX21vZHVsZXMvd290LWRlc2lnbi11bmkvY29tcG9uZW50cy93ZC11cGxvYWQvd2QtdXBsb2FkLnZ1ZQ"],"sourcesContent":["<template>\n  <view :class=\"['wd-upload', customClass]\" :style=\"customStyle\">\n    <!-- 预览列表 -->\n    <view :class=\"['wd-upload__preview', customPreviewClass]\" v-for=\"(file, index) in uploadFiles\" :key=\"index\">\n      <!-- 成功时展示图片 -->\n      <view class=\"wd-upload__status-content\">\n        <image v-if=\"isImage(file)\" :src=\"file.url\" :mode=\"imageMode\" class=\"wd-upload__picture\" @click=\"onPreviewImage(file)\" />\n        <template v-else-if=\"isVideo(file)\">\n          <view class=\"wd-upload__video\" v-if=\"file.thumb\" @click=\"onPreviewVideo(file)\">\n            <image :src=\"file.thumb\" :mode=\"imageMode\" class=\"wd-upload__picture\" />\n            <wd-icon name=\"play-circle-filled\" custom-class=\"wd-upload__video-paly\"></wd-icon>\n          </view>\n          <view v-else class=\"wd-upload__video\" @click=\"onPreviewVideo(file)\">\n\n\n\n\n\n            <video\n              :src=\"file.url\"\n              :title=\"file.name || '视频' + index\"\n              object-fit=\"contain\"\n              :controls=\"false\"\n              :poster=\"file.thumb\"\n              :autoplay=\"false\"\n              :show-center-play-btn=\"false\"\n              :show-fullscreen-btn=\"false\"\n              :show-play-btn=\"false\"\n              :show-loading=\"false\"\n              :show-progress=\"false\"\n              :show-mute-btn=\"false\"\n              :enable-progress-gesture=\"false\"\n              :enableNative=\"true\"\n              class=\"wd-upload__video\"\n            ></video>\n            <wd-icon name=\"play-circle-filled\" custom-class=\"wd-upload__video-paly\"></wd-icon>\n\n\n          </view>\n        </template>\n\n        <view v-else class=\"wd-upload__file\" @click=\"onPreviewFile(file)\">\n          <wd-icon name=\"file\" custom-class=\"wd-upload__file-icon\"></wd-icon>\n          <view class=\"wd-upload__file-name\">{{ file.name || file.url }}</view>\n        </view>\n      </view>\n\n      <view v-if=\"file[props.statusKey] !== 'success'\" class=\"wd-upload__mask wd-upload__status-content\">\n        <!-- loading时展示loading图标和进度 -->\n        <view v-if=\"file[props.statusKey] === 'loading'\" class=\"wd-upload__status-content\">\n          <wd-loading :type=\"loadingType\" :size=\"loadingSize\" :color=\"loadingColor\" />\n          <text class=\"wd-upload__progress-txt\">{{ file.percent }}%</text>\n        </view>\n        <!-- 失败时展示失败图标以及失败信息 -->\n        <view v-if=\"file[props.statusKey] === 'fail'\" class=\"wd-upload__status-content\">\n          <wd-icon name=\"close-outline\" custom-class=\"wd-upload__icon\"></wd-icon>\n          <text class=\"wd-upload__progress-txt\">{{ file.error || translate('error') }}</text>\n        </view>\n      </view>\n      <!-- 上传状态为上传中时不展示移除按钮 -->\n      <wd-icon\n        v-if=\"file[props.statusKey] !== 'loading' && !disabled\"\n        name=\"error-fill\"\n        custom-class=\"wd-upload__close\"\n        @click=\"removeFile(index)\"\n      ></wd-icon>\n      <!-- 自定义预览样式 -->\n      <slot name=\"preview-cover\" v-if=\"$slots['preview-cover']\" :file=\"file\" :index=\"index\"></slot>\n    </view>\n\n    <template v-if=\"showUpload\">\n      <view :class=\"['wd-upload__evoke-slot', customEvokeClass]\" v-if=\"$slots.default\" @click=\"handleChoose\">\n        <slot></slot>\n      </view>\n      <!-- 唤起项 -->\n      <view v-else @click=\"handleChoose\" :class=\"['wd-upload__evoke', disabled ? 'is-disabled' : '', customEvokeClass]\">\n        <!-- 唤起项图标 -->\n        <wd-icon class=\"wd-upload__evoke-icon\" name=\"fill-camera\"></wd-icon>\n        <!-- 有限制个数时确认是否展示限制个数 -->\n        <view v-if=\"limit && showLimitNum\" class=\"wd-upload__evoke-num\">（{{ uploadFiles.length }}/{{ limit }}）</view>\n      </view>\n    </template>\n  </view>\n  <wd-video-preview ref=\"videoPreview\"></wd-video-preview>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'wd-upload',\n  options: {\n    addGlobalClass: true,\n    virtualHost: true,\n    styleIsolation: 'shared'\n  }\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport wdIcon from '../wd-icon/wd-icon.vue'\nimport wdVideoPreview from '../wd-video-preview/wd-video-preview.vue'\nimport wdLoading from '../wd-loading/wd-loading.vue'\n\nimport { computed, ref, watch } from 'vue'\nimport { context, getType, isEqual, isImageUrl, isVideoUrl, isFunction, isDef, deepClone } from '../common/util'\nimport { chooseFile } from './utils'\nimport { useTranslate } from '../composables/useTranslate'\nimport {\n  uploadProps,\n  type UploadFileItem,\n  type ChooseFile,\n  type UploadExpose,\n  type UploadErrorEvent,\n  type UploadChangeEvent,\n  type UploadSuccessEvent,\n  type UploadProgressEvent,\n  type UploadOversizeEvent,\n  type UploadRemoveEvent,\n  type UploadMethod\n} from './types'\nimport type { VideoPreviewInstance } from '../wd-video-preview/types'\n\nconst props = defineProps(uploadProps)\n\nconst emit = defineEmits<{\n  (e: 'fail', value: UploadErrorEvent): void\n  (e: 'change', value: UploadChangeEvent): void\n  (e: 'success', value: UploadSuccessEvent): void\n  (e: 'progress', value: UploadProgressEvent): void\n  (e: 'oversize', value: UploadOversizeEvent): void\n  (e: 'chooseerror', value: any): void\n  (e: 'remove', value: UploadRemoveEvent): void\n  (e: 'update:fileList', value: UploadFileItem[]): void\n}>()\n\ndefineExpose<UploadExpose>({\n  submit: () => startUploadFiles()\n})\n\nconst { translate } = useTranslate('upload')\n\nconst uploadFiles = ref<UploadFileItem[]>([])\n\nconst showUpload = computed(() => !props.limit || uploadFiles.value.length < props.limit)\n\nconst videoPreview = ref<VideoPreviewInstance>()\n\nwatch(\n  () => props.fileList,\n  (val) => {\n    const { statusKey } = props\n    if (isEqual(val, uploadFiles.value)) return\n    const uploadFileList: UploadFileItem[] = val.map((item) => {\n      item[statusKey] = item[statusKey] || 'success'\n      item.response = item.response || ''\n      return { ...item, uid: context.id++ }\n    })\n    uploadFiles.value = uploadFileList\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.limit,\n  (val) => {\n    if (val && val < uploadFiles.value.length) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:169','[wot-design]Error: props limit must less than fileList.length')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.beforePreview,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:182','The type of beforePreview must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.onPreviewFail,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:195','The type of onPreviewFail must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.beforeRemove,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:208','The type of beforeRemove must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.beforeUpload,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:221','The type of beforeUpload must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.beforeChoose,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:234','The type of beforeChoose must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nwatch(\n  () => props.buildFormData,\n  (fn) => {\n    if (fn && !isFunction(fn)) {\n      uni.__f__('error','at uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue:247','The type of buildFormData must be Function')\n    }\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\nfunction emitFileList() {\n  emit('update:fileList', uploadFiles.value)\n}\n\n/**\n * 组件内部上传方法\n * @param file 文件\n * @param formData\n * @param options\n */\nconst upload: UploadMethod = (file, formData, options) => {\n  const uploadTask = uni.uploadFile({\n    url: options.action,\n    header: options.header,\n    name: options.name,\n    fileName: options.name,\n    fileType: options.fileType as 'image' | 'video' | 'audio',\n    formData,\n    filePath: file.url,\n    success(res) {\n      if (res.statusCode === options.statusCode) {\n        // 上传成功进行文件列表拼接\n        options.onSuccess(res, file, formData)\n      } else {\n        // 上传失败处理\n        options.onError({ ...res, errMsg: res.errMsg || '' }, file, formData)\n      }\n    },\n    fail(err) {\n      // 上传失败处理\n      options.onError(err, file, formData)\n    }\n  })\n  // 获取当前文件加载的百分比\n  uploadTask.onProgressUpdate((res) => {\n    options.onProgress(res, file)\n  })\n}\n\nconst startUpload: UploadMethod = (file, formData, options) => {\n  const { statusKey, uploadMethod } = props\n  // 设置上传中，防止重复发起上传\n  file[statusKey] = 'loading'\n  if (isFunction(uploadMethod)) {\n    uploadMethod(file, formData, options)\n  } else {\n    upload(file, formData, options)\n  }\n}\n\n/**\n * 获取图片信息\n * @param img\n */\nfunction getImageInfo(img: string) {\n  return new Promise<UniApp.GetImageInfoSuccessData>((resolve, reject) => {\n    uni.getImageInfo({\n      src: img,\n      success: (res) => {\n        resolve(res)\n      },\n      fail: (error) => {\n        reject(error)\n      }\n    })\n  })\n}\n\n/**\n * @description 初始化文件数据\n * @param {Object} file 上传的文件\n */\nfunction initFile(file: ChooseFile, currentIndex?: number) {\n  const { statusKey } = props\n  // 状态初始化\n  const initState: UploadFileItem = {\n    uid: context.id++,\n    // 仅h5支持 name\n    name: file.name || '',\n    thumb: file.thumb || '',\n    [statusKey]: 'pending',\n    size: file.size || 0,\n    url: file.path,\n    percent: 0\n  }\n  if (typeof currentIndex === 'number') {\n    uploadFiles.value.splice(currentIndex, 1, initState)\n  } else {\n    uploadFiles.value.push(initState)\n  }\n  if (props.autoUpload) {\n    startUploadFiles()\n  }\n}\n\n/**\n *  开始上传文件\n */\nfunction startUploadFiles() {\n  const { buildFormData, formData = {}, statusKey } = props\n  const { action, name, header = {}, accept, successStatus } = props\n  const statusCode = isDef(successStatus) ? successStatus : 200\n\n  for (const uploadFile of uploadFiles.value) {\n    // 仅开始未上传的文件\n    if (uploadFile[statusKey] == 'pending') {\n      if (buildFormData) {\n        buildFormData({\n          file: uploadFile,\n          formData,\n          resolve: (formData: Record<string, any>) => {\n            formData &&\n              startUpload(uploadFile, formData, {\n                onSuccess: handleSuccess,\n                onError: handleError,\n                onProgress: handleProgress,\n                action,\n                header,\n                name,\n                fileName: name,\n                fileType: accept as 'image' | 'video' | 'audio',\n                statusCode\n              })\n          }\n        })\n      } else {\n        startUpload(uploadFile, formData, {\n          onSuccess: handleSuccess,\n          onError: handleError,\n          onProgress: handleProgress,\n          action,\n          header,\n          name,\n          fileName: name,\n          fileType: accept as 'image' | 'video' | 'audio',\n          statusCode\n        })\n      }\n    }\n  }\n}\n\n/**\n * @description 上传失败捕获\n * @param {Object} err 错误返回信息\n * @param {Object} file 上传的文件\n */\nfunction handleError(err: Record<string, any>, file: UploadFileItem, formData: Record<string, any>) {\n  const { statusKey } = props\n  const index = uploadFiles.value.findIndex((item) => item.uid === file.uid)\n  if (index > -1) {\n    uploadFiles.value[index][statusKey] = 'fail'\n    uploadFiles.value[index].error = err.message\n    uploadFiles.value[index].response = err\n    emit('fail', { error: err, file, formData })\n    emitFileList()\n  }\n}\n\n/**\n * @description 上传成功捕获\n * @param {Object} res 接口返回信息\n * @param {Object} file 上传的文件\n */\nfunction handleSuccess(res: Record<string, any>, file: UploadFileItem, formData: Record<string, any>) {\n  const { statusKey } = props\n  const index = uploadFiles.value.findIndex((item) => item.uid === file.uid)\n  if (index > -1) {\n    uploadFiles.value[index][statusKey] = 'success'\n    uploadFiles.value[index].response = res.data\n    emit('change', { fileList: uploadFiles.value })\n    emit('success', { file, fileList: uploadFiles.value, formData })\n    emitFileList()\n  }\n}\n\n/**\n * @description 上传中捕获\n * @param {Object} res 接口返回信息\n * @param {Object} file 上传的文件\n */\nfunction handleProgress(res: UniApp.OnProgressUpdateResult, file: UploadFileItem) {\n  const index = uploadFiles.value.findIndex((item) => item.uid === file.uid)\n  if (index > -1) {\n    uploadFiles.value[index].percent = res.progress\n    emit('progress', { response: res, file })\n  }\n}\n\n/**\n * @description 选择文件的实际操作，将chooseFile自己用promise包了一层\n */\nfunction onChooseFile(currentIndex?: number) {\n  const { multiple, maxSize, accept, sizeType, limit, sourceType, compressed, maxDuration, camera, beforeUpload } = props\n  // 文件选择\n  chooseFile({\n    multiple,\n    sizeType,\n    sourceType,\n    maxCount: limit ? limit - uploadFiles.value.length : 9,\n    accept,\n    compressed,\n    maxDuration,\n    camera\n  })\n    .then((res) => {\n      // 成功选择初始化file\n      let files = res\n      // 单选只有一个\n      if (!multiple) {\n        files = files.slice(0, 1)\n      }\n      // 遍历列表逐个初始化上传参数\n      const mapFiles = async (files: ChooseFile[]) => {\n        for (let index = 0; index < files.length; index++) {\n          const file = files[index]\n          if (file.type === 'image' && !file.size) {\n            const imageInfo = await getImageInfo(file.path)\n            file.size = imageInfo.width * imageInfo.height\n          }\n          Number(file.size) <= maxSize ? initFile(file, currentIndex) : emit('oversize', { file })\n        }\n      }\n\n      // 上传前的钩子\n      if (beforeUpload) {\n        beforeUpload({\n          files,\n          fileList: uploadFiles.value,\n          resolve: (isPass: boolean) => {\n            isPass && mapFiles(files)\n          }\n        })\n      } else {\n        mapFiles(files)\n      }\n    })\n    .catch((error) => {\n      emit('chooseerror', { error })\n    })\n}\n\n/**\n * @description 选择文件，内置拦截选择操作\n */\nfunction handleChoose(index?: number) {\n  if (props.disabled) return\n  const { beforeChoose } = props\n\n  // 选择图片前的钩子\n  if (beforeChoose) {\n    beforeChoose({\n      fileList: uploadFiles.value,\n      resolve: (isPass: boolean) => {\n        isPass && onChooseFile(index)\n      }\n    })\n  } else {\n    onChooseFile(index)\n  }\n}\n\n/**\n * @description 移除文件\n * @param {Object} file 上传的文件\n * @param {Number} index 删除\n */\nfunction handleRemove(file: UploadFileItem) {\n  uploadFiles.value.splice(\n    uploadFiles.value.findIndex((item) => item.uid === file.uid),\n    1\n  )\n  emit('change', {\n    fileList: uploadFiles.value\n  })\n  emit('remove', { file })\n  emitFileList()\n}\n\nfunction removeFile(index: number) {\n  const { beforeRemove } = props\n  const intIndex: number = index\n  const file = uploadFiles.value[intIndex]\n  if (beforeRemove) {\n    beforeRemove({\n      file,\n      index: intIndex,\n      fileList: uploadFiles.value,\n      resolve: (isPass: boolean) => {\n        isPass && handleRemove(file)\n      }\n    })\n  } else {\n    handleRemove(file)\n  }\n}\n\n/**\n * 预览文件\n * @param file\n */\nfunction handlePreviewFile(file: UploadFileItem) {\n  uni.openDocument({\n    filePath: file.url,\n    showMenu: true\n  })\n}\n\n/**\n * 预览图片\n * @param index\n * @param lists\n */\nfunction handlePreviewImage(index: number, lists: string[]) {\n  const { onPreviewFail } = props\n  uni.previewImage({\n    urls: lists,\n    current: lists[index],\n    fail() {\n      if (onPreviewFail) {\n        onPreviewFail({\n          index,\n          imgList: lists\n        })\n      } else {\n        uni.showToast({ title: '预览图片失败', icon: 'none' })\n      }\n    }\n  })\n}\n\n/**\n * 预览视频\n * @param index\n * @param lists\n */\nfunction handlePreviewVieo(index: number, lists: UploadFileItem[]) {\n  const { onPreviewFail } = props\n\n  uni.previewMedia({\n    current: index,\n    sources: lists.map((file) => {\n      return {\n        url: file.url,\n        type: 'video',\n        poster: file.thumb\n      }\n    }),\n    fail() {\n      if (onPreviewFail) {\n        onPreviewFail({\n          index,\n          imgList: []\n        })\n      } else {\n        uni.showToast({ title: '预览视频失败', icon: 'none' })\n      }\n    }\n  })\n\n\n\n\n\n}\n\nfunction onPreviewImage(file: UploadFileItem) {\n  const { beforePreview, reupload } = props\n  const fileList = deepClone(uploadFiles.value)\n  const index: number = fileList.findIndex((item) => item.url === file.url)\n  const imgList = fileList.filter((file) => isImage(file)).map((file) => file.url)\n  const imgIndex: number = imgList.findIndex((item) => item === file.url)\n  if (reupload) {\n    handleChoose(index)\n  } else {\n    if (beforePreview) {\n      beforePreview({\n        file,\n        index,\n        fileList: fileList,\n        imgList: imgList,\n        resolve: (isPass: boolean) => {\n          isPass && handlePreviewImage(imgIndex, imgList)\n        }\n      })\n    } else {\n      handlePreviewImage(imgIndex, imgList)\n    }\n  }\n}\n\nfunction onPreviewVideo(file: UploadFileItem) {\n  const { beforePreview, reupload } = props\n  const fileList = deepClone(uploadFiles.value)\n  const index: number = fileList.findIndex((item) => item.url === file.url)\n  const videoList = fileList.filter((file) => isVideo(file))\n  const videoIndex: number = videoList.findIndex((item) => item.url === file.url)\n  if (reupload) {\n    handleChoose(index)\n  } else {\n    if (beforePreview) {\n      beforePreview({\n        file,\n        index,\n        imgList: [],\n        fileList,\n        resolve: (isPass: boolean) => {\n          isPass && handlePreviewVieo(videoIndex, videoList)\n        }\n      })\n    } else {\n      handlePreviewVieo(videoIndex, videoList)\n    }\n  }\n}\n\nfunction onPreviewFile(file: UploadFileItem) {\n  const { beforePreview, reupload } = props\n  const fileList = deepClone(uploadFiles.value)\n  const index: number = fileList.findIndex((item) => item.url === file.url)\n  if (reupload) {\n    handleChoose(index)\n  } else {\n    if (beforePreview) {\n      beforePreview({\n        file,\n        index,\n        imgList: [],\n        fileList,\n        resolve: (isPass: boolean) => {\n          isPass && handlePreviewFile(file)\n        }\n      })\n    } else {\n      handlePreviewFile(file)\n    }\n  }\n}\n\nfunction isVideo(file: UploadFileItem) {\n  return (file.name && isVideoUrl(file.name)) || isVideoUrl(file.url)\n}\n\nfunction isImage(file: UploadFileItem) {\n  return (file.name && isImageUrl(file.name)) || isImageUrl(file.url)\n}\n</script>\n<style lang=\"scss\" scoped>\n@import './index.scss';\n</style>\n","import Component from 'G:/Code/campus/miniProject/uni_modules/wot-design-uni/components/wd-upload/wd-upload.vue'\nwx.createComponent(Component)"],"names":["useTranslate","ref","computed","watch","isEqual","context","uni","isFunction","isDef","formData","chooseFile","files","deepClone","file","isVideoUrl","isImageUrl"],"mappings":"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"}