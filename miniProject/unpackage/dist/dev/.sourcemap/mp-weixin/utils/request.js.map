{"version":3,"file":"request.js","sources":["utils/request.ts"],"sourcesContent":["// types.ts\r\nexport interface RequestParams {\r\n    url: string;\r\n    method: string;\r\n    data?: any;\r\n    header?: any;\r\n}\r\nexport interface ResponseData {\r\n    statusCode: number;\r\n    data: any;\r\n}\r\n\r\n// request.ts\r\nconst base_url = 'http://localhost:8090';\r\nconst timeout = 5000;\r\n\r\n// 请求头配置\r\nconst defaultHeader = {\r\n    'Content-Type': 'application/json;charset=UTF-8',\r\n    'Authorization': 'Basic c2FiZXI6c2FiZXJfc2VjcmV0',\r\n};\r\n\r\n// 登录处理函数\r\nconst handleLogin = () => {\r\n    uni.clearStorageSync();\r\n    uni.showModal({\r\n        title: \"提示\",\r\n        content: \"请登录\",\r\n        showCancel: false,\r\n        success() {\r\n            setTimeout(() => {\r\n                uni.navigateTo({\r\n                    url: \"/pages/login/login\",\r\n                });\r\n            }, 1000);\r\n        },\r\n    });\r\n};\r\n\r\n// 全局请求封装\r\nexport default (params: RequestParams) => {\r\n    let url = params.url;\r\n    let method = params.method || \"GET\";\r\n    let data = params.data || {};\r\n    let header = {\r\n        'sa-Token': uni.getStorageSync('token') || '',\r\n        ...defaultHeader,\r\n        ...params.header,\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n        uni.request({\r\n            url: base_url + url,\r\n            method: method,\r\n            header: header,\r\n            data: data,\r\n            timeout: timeout,\r\n            withCredentials: true,\r\n            success(response) {\r\n                const res: ResponseData = response;\r\n                if (res.statusCode === 200) {\r\n                    resolve(res.data);\r\n                } else {\r\n                    switch (res.statusCode) {\r\n                        case 401:\r\n                            handleLogin();\r\n                            break;\r\n                        case 404:\r\n                            uni.showToast({\r\n                                title: '请求地址不存在...',\r\n                                duration: 2000,\r\n                            });\r\n                            break;\r\n                        default:\r\n                            uni.showToast({\r\n                                title: '请重试...',\r\n                                duration: 2000,\r\n                            });\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n            fail(err) {\r\n                console.log(err);\r\n                if (err.errMsg.includes('request:fail')) {\r\n                    uni.showToast({\r\n                        title: '网络异常',\r\n                        icon: \"error\",\r\n                        duration: 2000,\r\n                    });\r\n                } else {\r\n                    uni.showToast({\r\n                        title: '未知异常',\r\n                        duration: 2000,\r\n                    });\r\n                }\r\n                reject(err);\r\n            },\r\n            complete() {\r\n                uni.hideLoading();\r\n                uni.hideToast();\r\n            },\r\n        });\r\n    });\r\n};"],"names":["uni"],"mappings":";;AAaA,MAAM,WAAW;AACjB,MAAM,UAAU;AAGhB,MAAM,gBAAgB;AAAA,EAClB,gBAAgB;AAAA,EAChB,iBAAiB;AACrB;AAGA,MAAM,cAAc,MAAM;AACtBA,gBAAA,MAAI,iBAAiB;AACrBA,gBAAAA,MAAI,UAAU;AAAA,IACV,OAAO;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,UAAU;AACN,iBAAW,MAAM;AACbA,sBAAAA,MAAI,WAAW;AAAA,UACX,KAAK;AAAA,QAAA,CACR;AAAA,SACF,GAAI;AAAA,IACX;AAAA,EAAA,CACH;AACL;AAGA,MAAe,UAAA,CAAC,WAA0B;AACtC,MAAI,MAAM,OAAO;AACb,MAAA,SAAS,OAAO,UAAU;AAC1B,MAAA,OAAO,OAAO,QAAQ;AAC1B,MAAI,SAAS;AAAA,IACT,YAAYA,cAAA,MAAI,eAAe,OAAO,KAAK;AAAA,IAC3C,GAAG;AAAA,IACH,GAAG,OAAO;AAAA,EAAA;AAGd,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpCA,kBAAAA,MAAI,QAAQ;AAAA,MACR,KAAK,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB;AAAA,MACjB,QAAQ,UAAU;AACd,cAAM,MAAoB;AACtB,YAAA,IAAI,eAAe,KAAK;AACxB,kBAAQ,IAAI,IAAI;AAAA,QAAA,OACb;AACH,kBAAQ,IAAI,YAAY;AAAA,YACpB,KAAK;AACW;AACZ;AAAA,YACJ,KAAK;AACDA,4BAAAA,MAAI,UAAU;AAAA,gBACV,OAAO;AAAA,gBACP,UAAU;AAAA,cAAA,CACb;AACD;AAAA,YACJ;AACIA,4BAAAA,MAAI,UAAU;AAAA,gBACV,OAAO;AAAA,gBACP,UAAU;AAAA,cAAA,CACb;AACD;AAAA,UACR;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,KAAK,KAAK;AACNA,sBAAAA,MAAA,MAAA,OAAA,0BAAY,GAAG;AACf,YAAI,IAAI,OAAO,SAAS,cAAc,GAAG;AACrCA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,MAAM;AAAA,YACN,UAAU;AAAA,UAAA,CACb;AAAA,QAAA,OACE;AACHA,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,UAAU;AAAA,UAAA,CACb;AAAA,QACL;AACA,eAAO,GAAG;AAAA,MACd;AAAA,MACA,WAAW;AACPA,sBAAA,MAAI,YAAY;AAChBA,sBAAA,MAAI,UAAU;AAAA,MAClB;AAAA,IAAA,CACH;AAAA,EAAA,CACJ;AACL;;"}