{"remainingRequest":"G:\\Code\\campus\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Code\\campus\\vue-admin-template\\src\\views\\activity\\index.vue?vue&type=template&id=99941528&scoped=true","dependencies":[{"path":"G:\\Code\\campus\\vue-admin-template\\src\\views\\activity\\index.vue","mtime":1742645775850},{"path":"G:\\Code\\campus\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742551614966},{"path":"G:\\Code\\campus\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1742551617385},{"path":"G:\\Code\\campus\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742551614966},{"path":"G:\\Code\\campus\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1742551616768}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}